version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.1.0

jobs:
  build:
    docker:
      - image: noland/flutter-circleci-demo:v3
    steps:
       # Deps and tools
      - browser-tools/install-chrome:
          chrome-version: 99.0.4844.74
      - browser-tools/install-chromedriver
      - checkout
      - run:
          name: Install Firebase Deps
          command: cd functions && npm install
      - run:
          name: Install CI/CD Script Deps
          command: cd cicd && npm install
      - run:
          name: Print flutter doctor
          command: flutter doctor
      - run:
          name: Check Firebase CLI Connection
          command: firebase --version && firebase projects:list

      # Check that it even builds in production before running tests. Also needed to create output directory for future steps
      - run:
          name: Build for Production
          command: flutter build web

      # Setup test environment Firebase project
      - run:
          name: Deploy Firebase Test Project
          command: firebase -P ${FIREBASE_TEST_PROJECT} deploy
      - run:
          name: Prepare Firestore Test Project
          command: node ./cicd/cicd.js prep-test-env

    # Disabled for now because unit test will need a more elaborate harness to play nice with Firebase
      # Test the dev build with its instrumentation
    #   - run:
    #       name: Run Unit Tests
    #       command: flutter test --coverage
      - run:
          name: Start Chrome driver process
          command: chromedriver --port=4444 && true
          background: true
      - run:
          name: Run Integration Tests
          command: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d web-server

    #   Can't find a way to kill background process without making red error step in Circleci
    #   - run:
    #       name: Kill Chromedriver Background Process
    #       command: kill -SIGINT $(pgrep chromedriver)

      # Deploy to Production
      - run:
          name: Deploy Firebase Production Project
          command: firebase -P ${FIREBASE_PRODUCTION_PROJECT} deploy
      # Save artifacts
      - store_artifacts:
          path: /tmp/screenshots
      - store_artifacts:
          path: coverage